services:
  db:
    container_name: postgres-db
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: stockdb
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d stockdb"]
      interval: 10s
      retries: 5
      start_period: 1s

  fetcher:
    container_name: data-fetcher
    build: .
    command: python -u fetch_data.py
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/stockdb
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "sleep 10 && exit 0"]
      interval: 10s
      retries: 1
      start_period: 5s
    restart: on-failure:3

  trainer:
    container_name: model-trainer
    build: .
    command: python -u train_model.py
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/stockdb
    depends_on:
      fetcher:
        condition: service_healthy
    restart: on-failure:3

  dashboard:
    container_name: app-dashboard
    build: .
    command: python -u app.py
    environment:
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/stockdb
    ports:
      - "8050:8050"
    depends_on:
      trainer:
        condition: service_started
    restart: always

volumes:
  db-data: